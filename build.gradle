plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'personal.tutorial'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // log 표시용
    implementation("com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0")

    // QueryDSL
    implementation 'com.querydsl:querydsl-core'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor("com.querydsl:querydsl-apt:5.0.0:jakarta",
            "jakarta.persistence:jakarta.persistence-api:3.1.0")
}

tasks.named('test') {
    useJUnitPlatform()
}


// QueryDSL START //
def generated = 'src/main/generated'

sourceSets {
    main.java.srcDirs += [generated]
}

tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory.set(file(generated))
}

clean.doLast {
    file(generated).deleteDir()
}
// QueryDSL END //